{"version":3,"sources":["components/Header/Header.tsx","api/people.ts","api/api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","getPeople","url","fetch","then","response","ok","Error","status","statusText","json","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","map","PeoplePage","useState","setPeople","loadPeople","a","peopleFromServer","newPeople","mother","find","father","useEffect","NotFoundPage","App","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"sTAKaA,EAAmB,WAC9B,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAIA,UAAU,YAAd,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,QACHD,UAAU,YAFZ,yBAQF,oBAAIA,UAAU,YAAd,SACE,cAAC,IAAD,CACEC,GAAG,UACHD,UAAU,YAFZ,iC,sCCLGE,EAAY,WACvB,OAZeC,EAYA,eAXRC,MAAM,GAAD,OCJU,yDDIV,OAAeD,IACxBE,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAPN,IAACR,GEMJS,G,MAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3C,OACE,qBAAIb,UAAU,aAAd,UACE,oBAAIA,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQC,OACrC,oBAAId,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQE,MACrC,oBAAIf,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQG,OACrC,oBAAIhB,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQI,OACrC,oBAAIjB,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQK,aACrC,oBAAIlB,UAAU,cAAd,gBAA6Ba,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAQM,kBCP9BC,G,MAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOrB,UAAU,QAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,uCACGqB,QADH,IACGA,OADH,EACGA,EAAQC,KAAI,SAACT,GAAD,OAAY,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOC,gBCpB3CS,EAAuB,WAClC,MAA4BC,mBAAyB,MAArD,mBAAOH,EAAP,KAAeI,EAAf,KAEMC,EAAU,uCAAG,8BAAAC,EAAA,sEACczB,IADd,OACX0B,EADW,OAKXC,EAAYD,EAAiBN,KAAI,SAAAT,GAAM,kCACxCA,GADwC,IAE3CiB,OAAQF,EAAiBG,MAAK,SAAAD,GAAM,OAAIA,EAAOhB,OAASD,EAAOK,cAC/Dc,OAAQJ,EAAiBG,MAAK,SAAAC,GAAM,OAAIA,EAAOlB,OAASD,EAAOM,mBAGjEM,EAAUI,GAXO,2CAAH,qDAkBhB,OAJAI,qBAAU,WACRP,MACC,IAGD,cAAC,EAAD,CAAaL,OAAQA,KCvBZa,G,MAAyB,WACpC,OACE,oBAAIlC,UAAU,aAAd,8BC2CWmC,G,MAxCO,WACpB,OACE,sBAAKnC,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CACEoC,KAAK,IACLC,QACE,cAAC,IAAD,CAAUpC,GAAG,QAAQqC,SAAO,MAIhC,cAAC,IAAD,CACEF,KAAK,QACLC,QACE,oBAAIrC,UAAU,iBAAd,yBAIJ,cAAC,IAAD,CACEoC,KAAK,UACLC,QACE,cAAC,EAAD,MAIJ,cAAC,IAAD,CACED,KAAK,IACLC,QACE,cAAC,EAAD,cClCZE,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.541d3276.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const Header: React.FC = () => {\n  return (\n    <nav className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__item\">\n          <NavLink\n            to=\"/home\"\n            className=\"nav__link\"\n          >\n            Home page\n          </NavLink>\n        </li>\n\n        <li className=\"nav__item\">\n          <NavLink\n            to=\"/people\"\n            className=\"nav__link\"\n          >\n            People page\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n\n  );\n};\n","import { BASE_URL } from './api';\nimport { Human } from '../interface/Human__interface';\n\nconst request = (url: string) => {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n\nexport const getPeople = (): Promise<Human[]> => {\n  return request('/people.json');\n};\n","export const BASE_URL = 'https://mate-academy.github.io/react_people-table/api';\n","import React from 'react';\nimport { Human } from '../../interface/Human__interface';\n\nimport './PersonRow.scss';\n\ntype Props = {\n  person: Human | null,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"table__row\">\n      <td className=\"table__cell\">{person?.name}</td>\n      <td className=\"table__cell\">{person?.sex}</td>\n      <td className=\"table__cell\">{person?.born}</td>\n      <td className=\"table__cell\">{person?.died}</td>\n      <td className=\"table__cell\">{person?.motherName}</td>\n      <td className=\"table__cell\">{person?.fatherName}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Human } from '../../interface/Human__interface';\nimport { PersonRow } from '../PersonRow';\n\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Human[] | null,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table\">\n      <thead className=\"table__head\">\n        <tr>\n          <th>NAME</th>\n          <th>SEX</th>\n          <th>BORN</th>\n          <th>DIED</th>\n          <th>MOTHER</th>\n          <th>FATHER</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people?.map((person) => <PersonRow key={person.name} person={person} />)}\n      </tbody>\n    </table>\n\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Human } from '../../interface/Human__interface';\nimport { getPeople } from '../../api/people';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Human[] | null>(null);\n\n  const loadPeople = async () => {\n    const peopleFromServer = await getPeople();\n\n    //----------------------------------------------------------------------------------------\n\n    const newPeople = peopleFromServer.map(person => ({\n      ...person,\n      mother: peopleFromServer.find(mother => mother.name === person.motherName),\n      father: peopleFromServer.find(father => father.name === person.fatherName),\n    }));\n\n    setPeople(newPeople);\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  return (\n    <PeopleTable people={people} />\n  );\n};\n","import React from 'react';\n\nimport './NotFoundPage.scss';\n\nexport const NotFoundPage: React.FC = () => {\n  return (\n    <h2 className=\"error-page\">Page not found</h2>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport { Header } from './components/Header';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nimport './App.scss';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n\n      <Header />\n\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Navigate to=\"/home\" replace />\n          }\n        />\n\n        <Route\n          path=\"/home\"\n          element={\n            <h1 className=\"App__home-page\">Home page</h1>\n          }\n        />\n\n        <Route\n          path=\"/people\"\n          element={\n            <PeoplePage />\n          }\n        />\n\n        <Route\n          path=\"*\"\n          element={\n            <NotFoundPage />\n          }\n        />\n      </Routes>\n\n    </div>\n  );\n};\n\nexport default App;\n","import { BrowserRouter as Router } from 'react-router-dom';\n\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}